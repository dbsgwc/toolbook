import{_ as s,c as a,o as e,ag as i}from"./chunks/framework.UtM2fnOC.js";const p=JSON.parse('{"title":"Docker 速查","description":"","frontmatter":{"title":"Docker 速查"},"headers":[],"relativePath":"tools/docker.md","filePath":"tools/docker.md","lastUpdated":1756452814000}'),d={name:"tools/docker.md"};function o(h,t,l,r,n,c){return e(),a("div",null,[...t[0]||(t[0]=[i(`<h1 id="docker-速查" tabindex="-1">Docker 速查 <a class="header-anchor" href="#docker-速查" aria-label="Permalink to &quot;Docker 速查&quot;">​</a></h1><p>容器构建与运行的常用命令。</p><h2 id="安装与版本" tabindex="-1">安装与版本 <a class="header-anchor" href="#安装与版本" aria-label="Permalink to &quot;安装与版本&quot;">​</a></h2><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> version</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> info</span></span></code></pre></div><h2 id="镜像" tabindex="-1">镜像 <a class="header-anchor" href="#镜像" aria-label="Permalink to &quot;镜像&quot;">​</a></h2><table tabindex="0"><thead><tr><th>命令</th><th>说明</th><th>示例</th></tr></thead><tbody><tr><td><code>docker pull &lt;img&gt;</code></td><td>拉取镜像</td><td><code>docker pull nginx:1.25</code></td></tr><tr><td><code>docker images</code></td><td>镜像列表</td><td><code>docker images</code></td></tr><tr><td><code>docker rmi &lt;img&gt;</code></td><td>删除镜像</td><td><code>docker rmi nginx:1.25</code></td></tr><tr><td><code>docker build -t &lt;name&gt; .</code></td><td>构建镜像</td><td><code>docker build -t myapp:1.0 .</code></td></tr></tbody></table><h2 id="容器" tabindex="-1">容器 <a class="header-anchor" href="#容器" aria-label="Permalink to &quot;容器&quot;">​</a></h2><table tabindex="0"><thead><tr><th>命令</th><th>说明</th><th>示例</th></tr></thead><tbody><tr><td><code>docker run</code></td><td>运行容器</td><td><code>docker run -d --name web -p 80:80 nginx</code></td></tr><tr><td><code>docker ps</code></td><td>运行中的容器</td><td><code>docker ps</code></td></tr><tr><td><code>docker ps -a</code></td><td>所有容器</td><td><code>docker ps -a</code></td></tr><tr><td><code>docker logs -f &lt;c&gt;</code></td><td>查看日志</td><td><code>docker logs -f web</code></td></tr><tr><td><code>docker exec -it &lt;c&gt; sh</code></td><td>进入容器</td><td><code>docker exec -it web sh</code></td></tr><tr><td><code>docker stop &lt;c&gt;</code></td><td>停止容器</td><td><code>docker stop web</code></td></tr><tr><td><code>docker rm &lt;c&gt;</code></td><td>删除容器</td><td><code>docker rm web</code></td></tr></tbody></table><h2 id="网络与数据" tabindex="-1">网络与数据 <a class="header-anchor" href="#网络与数据" aria-label="Permalink to &quot;网络与数据&quot;">​</a></h2><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> network</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ls</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> volume</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ls</span></span></code></pre></div><h2 id="compose" tabindex="-1">Compose <a class="header-anchor" href="#compose" aria-label="Permalink to &quot;Compose&quot;">​</a></h2><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> compose</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> up</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -d</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> compose</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> down</span></span></code></pre></div><h2 id="常见场景" tabindex="-1">常见场景 <a class="header-anchor" href="#常见场景" aria-label="Permalink to &quot;常见场景&quot;">​</a></h2><ul><li>构建并运行：<div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -t</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> myapp:1.0</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -d</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --name</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> myapp</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 3000:3000</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> myapp:1.0</span></span></code></pre></div></li></ul><h2 id="参考" tabindex="-1">参考 <a class="header-anchor" href="#参考" aria-label="Permalink to &quot;参考&quot;">​</a></h2><ul><li>Docker 文档：<code>https://docs.docker.com/</code></li></ul>`,16)])])}const F=s(d,[["render",o]]);export{p as __pageData,F as default};
